<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                template="./layout/default2.xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:p="http://primefaces.org/ui">

    <ui:define name="top">

    </ui:define>

    <ui:define name="content">
        <style>
            <!-- template for the form-->
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            /*body {
                font-family: "Inter", sans-serif;
            }*/
            .formbold-mb-5 {
                margin-bottom: 20px;
            }
            .formbold-pt-3 {
                padding-top: 12px;
            }
            .formbold-main-wrapper {
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 48px;
            }

            .formbold-form-wrapper {
                margin: 0 auto;
                max-width: 550px;
                width: 100%;
                background: white;
            }
            .formbold-form-label {
                display: block;
                font-weight: 500;
                font-size: 16px;
                color: #07074d;
                margin-bottom: 12px;
            }
            .formbold-form-label-2 {
                font-weight: 600;
                font-size: 20px;
                margin-bottom: 20px;
            }

            .formbold-form-input {
                width: 100%;
                padding: 12px 24px;
                border-radius: 6px;
                border: 1px solid #e0e0e0;
                background: white;
                font-weight: 500;
                font-size: 16px;
                color: #6b7280;
                outline: none;
                resize: none;
            }
            .formbold-form-input:focus {
                border-color: #6a64f1;
                box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
            }

            .formbold-btn {
                text-align: center;
                font-size: 16px;
                width: 100%;
                border-radius: 6px;
                padding: 14px 32px;
                border: none;
                font-weight: 600;
                background-color: #6a64f1;
                color: white;
                cursor: pointer;
            }
            .formbold-btn:hover {
                box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
            }

            .formbold--mx-3 {
                margin-left: -12px;
                margin-right: -12px;
            }
            .formbold-px-3 {
                padding-left: 12px;
                padding-right: 12px;
            }
            .flex {
                display: flex;
            }
            .flex-wrap {
                flex-wrap: wrap;
            }
            .w-full {
                width: 100%;
            }
            .formbold-radio {
                width: 20px;
                height: 20px;
            }
            .formbold-radio-label {
                font-weight: 500;
                font-size: 16px;
                padding-left: 12px;
                color: #070707;
                padding-right: 20px;
            }
            @media (min-width: 540px) {
                .sm\:w-half {
                    width: 50%;
                }
            }

            /* Style for Multiselect */


            .popup {
                display:none;
                position: absolute;
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                border-radius: 5px;
                padding: 10px;
                margin-top: 5px;
            }

        </style>
        <ui:fragment rendered="#{exchangeListingManagedBean.currentExchangeListing.id == null}">
            <div class="text-center">
                <h2>Create Exchange Listing</h2>
            </div>
        </ui:fragment>

        <ui:fragment rendered="#{exchangeListingManagedBean.currentExchangeListing.id != null}">
            <div class="text-center">
                <h2>Edit Exchange Listing</h2>
            </div>
        </ui:fragment>

        <div class="formbold-main-wrapper">
            <!-- Author: FormBold Team -->
            <!-- Learn More: https://formbold.com -->
            <div class="formbold-form-wrapper">
                <h:form> 
                    <p:growl id="growl" sticky="true" showDetail="true"/>
                    <!-- redirect to addSkills page, show notfication that says xxx-->

                    <div class="modal fade" id="redirectModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="deleteModalLabel">Add Skills to continue</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">A skill set is needed for the other party to choose when making an offer.</div>
                                <div class="modal-footer">
                                    <!--<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                    <h:commandButton value="continue" styleClass="btn btn-primary" immediate="true"
                                                     action="{exchangeListingManagedBean.navigateToAddSkill}" />-->
                                    <button type="button" class="btn btn-primary" onclick="window.location.href = 'addSkill.xhtml?faces-redirect=true';">Continue</button>


                                </div>
                            </div>
                        </div>
                    </div>

                    <h:outputScript rendered="#{empty exchangeListingManagedBean.currentCustomerSkills}">
                        $(document).ready(function() {
                        $('#redirectModal').modal('show');
                        });
                    </h:outputScript>

                    <div class="formbold-mb-5">
                        <h:outputLabel for="title" class="formbold-form-label">Title</h:outputLabel>
                        <h:inputText id="title" value="#{exchangeListingManagedBean.currentExchangeListing.title}" class="formbold-form-input" required="True" requiredMessage="Title required"/>
                    </div>

                    <h:selectManyCheckbox value="#{exchangeListingManagedBean.neededSkillIds}" layout="pageDirection" required="true" requiredMessage="Skills needed" >
                        <f:selectItems value="#{exchangeListingManagedBean.skills}" var="skill" 
                                       itemValue="#{skill.id}" itemLabel="#{skill.skillName}" />
                    </h:selectManyCheckbox>

                    <!--
                    <div class="formbold-mb-5 w-full">
                        <label for="date" class="formbold-form-label"> Date </label>
                        <p:datePicker id="date" value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}" 
                                      pattern="yyyy-MM-dd" required="true" 
                                      onchange="updateMinTime()"
                                      />
                        
                        <input
                            type="date"
                            name="date"
                            id="date"
                            class="formbold-form-input"
                            onchange="updateMinTime()" 
                            value="{exchangeListingManagedBean.date}"
                            required="required"
                            />              
                       
                    </div>
                    -->

                    <div class="flex flex-wrap formbold--mx-3">
                        <div class="w-full sm:w-half formbold-px-3">
                            <div class="formbold-mb-5">
                                <label for="startDateTime" class="formbold-form-label"> Start Time </label>
                                <input type="datetime-local" 
                                       name="startDateTime" 
                                       id="startDateTime" 
                                       required="true" 
                                       class="formbold-form-input"
                                       value="#{exchangeListingManagedBean.formattedEndDateTime}"
                                       onchange="setEndTimeToOneHourLater()"/>


                                <!--
                                <input
                                    type="time"
                                    name="startTime"
                                    id="startTime"
                                    class="formbold-form-input"
                                    onchange="document.getElementById('endTime').min = this.value"
                                    required="required"
                                    />
                                -->
                                <!--
                                <input type="datetime-local" id="startDateTime" name="startDateTime"
                                       class="formbold-form-input" required="required"
                                       onchange="setMinEndDateTime()"
                                       value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}"
                                       />
                                -->      
                                <!--
                                <input type="datetime-local" id="startDateTime" name="startDateTime" 
                                       
                                       class="formbold-form-input" required="required"
                                       value="{exchangeListingManagedBean.formattedStartDateTime}"
                                       onchange="{exchangeListingManagedBean.setStartDateTime(this.value)}"/>
                                -->
                                <!--
                                <input type="datetime-local" id="startDateTime" name="startDateTime"
                                       class="formbold-form-input" required="required"
                                       onchange="setMinEndDateTime()"
                                       value="{exchangeListingManagedBean.formattedStartDateTime}" />
                                -->
                                <!--
                                <p:calendar id="startTime" value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}" 
                                            pattern="HH:mm" timeOnly="true" required="true"
                                            onchange="document.getElementById('endTime').min = this.value"
                                            />
                                -->

                                <!-- Conflict with template script, does not show anything
                                <p:calendar id="startDateTime" value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}" 
                                            pattern="yyyy-MM-dd HH:mm" required="true" showOn="focus"
                                            timeOnly="false">
                                </p:calendar>
                                -->

                            </div>
                        </div>
                        <div class="w-full sm:w-half formbold-px-3">
                            <div class="formbold-mb-5">
                                <label for="endDateTime" class="formbold-form-label">End Time </label>
                                <input type="datetime-local" 
                                       name="endDateTime" 
                                       id="endDateTime" 
                                       required="true" 
                                       class="formbold-form-input"
                                       value="#{exchangeListingManagedBean.formattedEndDateTime}"
                                       onchange="checkRegistrationDeadline()"/>

                                <!--
                                <input
                                    type="time"
                                    name="endTime"
                                    id="endTime"
                                    class="formbold-form-input"
                                    required="required"
                                    />
                                -->
                                <!--
                                <input
                                    type="datetime-local" 
                                    name="endDateTime"
                                    id="endDateTime"
                                    class="formbold-form-input"
                                    required="required"
                                    value="{exchangeListingManagedBean.formattedEndDateTime}"
                                    onchange="{exchangeListingManagedBean.setEndDateTime(this.value)}"/>
                                -->
                                <!--
                                <input
                                    type="datetime-local" 
                                    name="endDateTime"
                                    id="endDateTime"
                                    class="formbold-form-input"
                                    required="required"
                                    value="{exchangeListingManagedBean.formattedEndDateTime}"
                                    />
                                -->
                                <!--
                                <p:calendar id="endTime" value="{exchangeListingManagedBean.currentExchangeListing.endDateTime}"
                                            pattern="HH:mm" timeOnly="true" required="true"
                                            />
                                -->
                                <!--  Conflict with jquery from template, cnnt show anything  
                                <p:calendar id="endDateTime" value="{exchangeListingManagedBean.currentExchangeListing.endDateTime}" 
                                            pattern="yyyy-MM-dd HH:mm" required="true" showOn="focus"
                                            timeOnly="false"/>
                                -->
                            </div>
                        </div>
                    </div>

                    <div id="popup" class="popup">
                        Pls ensure end time is after start time
                    </div>

                    <!--                    
                   <div class="flex formbold-mb-5">
                     <div class="flex">
                       <input
                         type="radio"
                         name="radio1"
                         id="radioButton1"
                         class="formbold-radio"
                       />
                       <label for="radioButton1" class="formbold-radio-label"> One-time </label>
                     </div>
                     <div class="flex">
                       <input
                         type="radio"
                         name="radio1"
                         id="radioButton2"
                         class="formbold-radio"
                       />
                       <label for="radioButton2" class="formbold-radio-label"> Recurrent </label>
                     </div>
                   </div>
                    -->

                    <div class="formbold-mb-5">
                        <label for="message" class="formbold-form-label"> Description </label>

                        <h:inputTextarea id="message" value="#{exchangeListingManagedBean.currentExchangeListing.description}" rows="6" class="formbold-form-input" required="true"/>

                    </div>

                    <div>
                        <h:commandButton onclick="return validateDT()" 
                                         value="#{exchangeListingManagedBean.currentExchangeListing.id != null ? 'Update Listing' : 'Add Listing'}" 
                                         action="#{exchangeListingManagedBean.submit}" 
                                         class="site-btn"
                                         />
                    </div>

                </h:form>
            </div>
        </div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

        <script>
                            // Set the minimum date for the date input to today
                            var currDate = new Date().toISOString().slice(0, 16);
                            document.getElementsByName('startDateTime')[0].min = currDate;
                            document.getElementsByName('endDateTime')[0].min = currDate;


                            //<![CDATA[

                            function setEndTimeToOneHourLater() {
                                var startDate = document.getElementById('startDateTime').value;
                                console.log("Initial startDate value:", startDate);
                                if (startDate) {
                                    var startDateObj = new Date(startDate);
                                    // Check if the date object is valid
                                    if (isNaN(startDateObj.getTime())) {
                                        console.error("Invalid date from startDateTime:", startDate);
                                        return; // Exit the function if the date is invalid
                                    }
                                    var endDate = moment(startDate).add(1, 'hours').format('YYYY-MM-DDTHH:mm');
                                    console.log("New endDateTime value:", endDate);
                                    document.getElementById('endDateTime').value = endDate;

                                    // restrict other dates
                                    var startDateMoment = moment(startDate);
                                    // Set min and max to the beginning and end of the day
                                    var minDateTime = startDateMoment.startOf('day').format('YYYY-MM-DDTHH:mm');
                                    var maxDateTime = startDateMoment.endOf('day').format('YYYY-MM-DDTHH:mm');

                                    document.getElementById('endDateTime').min = minDateTime;
                                    document.getElementById('endDateTime').max = maxDateTime;
                                } else {
                                    console.error("No startDate provided");
                                }
                            }


                            // Function to check if time is after current and set end date to be after 
                            // NOT used - for 1 date, 2 time
                            function validateDateTime() {
                                const selectedDateValue = document.getElementById('date').value;
                                const selectedStartTimeValue = document.getElementById('startTime').value;
                                const selectedDate = new Date(selectedDateValue + 'T' + selectedStartTimeValue);
                                const now = new Date();

                                if (selectedDate <= now) {
                                    alert('The selected date and time must be in the future.');
                                    return false; // Prevent form submission
                                }

                                return true; // Allow form submission
                            }

                            // Function to check if time is after current and set end date to be after 
                            // for both field with datetime-local
                            function validateDT() {
                                const selectedStartDateTime = document.getElementById('startDateTime').value;
                                const selectedEndDateTime = document.getElementById('endDateTime').value;
                                const now = new Date();
                                if (selectedStartDateTime >= selectedEndDateTime) {
                                    alert('startDate must be before Event date');
                                    return false; // Prevent form submission
                                } else if (selectedStartDateTime <= now || selectedEndDateTime <= now) {
                                    alert('The selected date and time must be in the future.');
                                    return false; // Prevent form submission
                                }
                                return true; // Allow form submission
                            }


                            function checkRegistrationDeadline() {
                                const selectedStartDateTime = document.getElementById('startDateTime').value;
                                const selectedEndDateTime = document.getElementById('endDateTime').value;
                                const currentDate = new Date();

                                // Clear previous messages
                                const popup = document.getElementById('popup');
                                popup.style.display = 'none';

                                if (selectedStartDateTime >= selectedEndDateTime) {
                                    // Show the popup
                                    popup.style.display = 'block';
                                    popup.style.opacity = 1;
                                }

                                // Fade out popups after 5 seconds
                                setTimeout(function () {
                                    fadeOutElement(popup);

                                }, 4000);
                            }

                            function fadeOutElement(element) {
                                element.style.transition = 'opacity 1s';
                                element.style.opacity = 0;

                                // Hide element after transition
                                setTimeout(function () {
                                    element.style.display = 'none';
                                }, 1000);
                            }

                            //]]>
        </script>
    </ui:define>

</ui:composition>
