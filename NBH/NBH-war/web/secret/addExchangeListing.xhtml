<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                template="./../layout/customerTemplate.xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:p="http://primefaces.org/ui">

    <ui:define name="top">
  
    </ui:define>

    <ui:define name="content">
        <style>
            <!-- template for the form-->
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }
            body {
                font-family: "Inter", sans-serif;
            }
            .formbold-mb-5 {
                margin-bottom: 20px;
            }
            .formbold-pt-3 {
                padding-top: 12px;
            }
            .formbold-main-wrapper {
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 48px;
            }

            .formbold-form-wrapper {
                margin: 0 auto;
                max-width: 550px;
                width: 100%;
                background: white;
            }
            .formbold-form-label {
                display: block;
                font-weight: 500;
                font-size: 16px;
                color: #07074d;
                margin-bottom: 12px;
            }
            .formbold-form-label-2 {
                font-weight: 600;
                font-size: 20px;
                margin-bottom: 20px;
            }

            .formbold-form-input {
                width: 100%;
                padding: 12px 24px;
                border-radius: 6px;
                border: 1px solid #e0e0e0;
                background: white;
                font-weight: 500;
                font-size: 16px;
                color: #6b7280;
                outline: none;
                resize: none;
            }
            .formbold-form-input:focus {
                border-color: #6a64f1;
                box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
            }

            .formbold-btn {
                text-align: center;
                font-size: 16px;
                width: 100%;
                border-radius: 6px;
                padding: 14px 32px;
                border: none;
                font-weight: 600;
                background-color: #6a64f1;
                color: white;
                cursor: pointer;
            }
            .formbold-btn:hover {
                box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
            }

            .formbold--mx-3 {
                margin-left: -12px;
                margin-right: -12px;
            }
            .formbold-px-3 {
                padding-left: 12px;
                padding-right: 12px;
            }
            .flex {
                display: flex;
            }
            .flex-wrap {
                flex-wrap: wrap;
            }
            .w-full {
                width: 100%;
            }
            .formbold-radio {
                width: 20px;
                height: 20px;
            }
            .formbold-radio-label {
                font-weight: 500;
                font-size: 16px;
                padding-left: 12px;
                color: #070707;
                padding-right: 20px;
            }
            @media (min-width: 540px) {
                .sm\:w-half {
                    width: 50%;
                }
            }

            /* Style for Multiselect */


        </style>

        <div class="formbold-main-wrapper">
            <!-- Author: FormBold Team -->
            <!-- Learn More: https://formbold.com -->
            <div class="formbold-form-wrapper">
                <h:form> 
                    <p:growl id="growl" sticky="true" showDetail="true"/>

                    <div class="formbold-mb-5">
                        <h:outputLabel for="title" class="formbold-form-label">Title</h:outputLabel>
                        <h:inputText id="title" value="#{exchangeListingManagedBean.currentExchangeListing.title}" class="formbold-form-input" required="True" requiredMessage="Title required"/>
                    </div>

                    <h:selectManyCheckbox value="#{exchangeListingManagedBean.neededSkillIds}" layout="pageDirection" required="true" requiredMessage="Skills needed" >
                        <f:selectItems value="#{exchangeListingManagedBean.skills}" var="skill" 
                                       itemValue="#{skill.id}" itemLabel="#{skill.skillName}" />
                    </h:selectManyCheckbox>

                    <!--
                    <div class="formbold-mb-5 w-full">
                        <label for="date" class="formbold-form-label"> Date </label>
                        <p:datePicker id="date" value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}" 
                                      pattern="yyyy-MM-dd" required="true" 
                                      onchange="updateMinTime()"
                                      />
                        
                        <input
                            type="date"
                            name="date"
                            id="date"
                            class="formbold-form-input"
                            onchange="updateMinTime()" 
                            value="{exchangeListingManagedBean.date}"
                            required="required"
                            />              
                       
                    </div>
                    -->

                    <div class="flex flex-wrap formbold--mx-3">
                        <div class="w-full sm:w-half formbold-px-3">
                            <div class="formbold-mb-5">
                                <label for="startDateTime" class="formbold-form-label"> Start Time </label>
                                <!--
                                <input
                                    type="time"
                                    name="startTime"
                                    id="startTime"
                                    class="formbold-form-input"
                                    onchange="document.getElementById('endTime').min = this.value"
                                    required="required"
                                    />
                                -->
                                <!--
                                <input type="datetime-local" id="startDateTime" name="startDateTime"
                                       class="formbold-form-input" required="required"
                                       onchange="setMinEndDateTime()"
                                       value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}"
                                       />
                                -->      
                                <!--
                                <input type="datetime-local" id="startDateTime" name="startDateTime" 
                                       
                                       class="formbold-form-input" required="required"
                                       value="{exchangeListingManagedBean.formattedStartDateTime}"
                                       onchange="{exchangeListingManagedBean.setStartDateTime(this.value)}"/>
                                -->
                                <!--
                                <input type="datetime-local" id="startDateTime" name="startDateTime"
                                       class="formbold-form-input" required="required"
                                       onchange="setMinEndDateTime()"
                                       value="{exchangeListingManagedBean.formattedStartDateTime}" />
                                -->
                                <!--
                                <p:calendar id="startTime" value="{exchangeListingManagedBean.currentExchangeListing.startDateTime}" 
                                            pattern="HH:mm" timeOnly="true" required="true"
                                            onchange="document.getElementById('endTime').min = this.value"
                                            />
                                -->
                                
                                <p:calendar id="startDateTime" value="#{exchangeListingManagedBean.currentExchangeListing.startDateTime}" 
                                            pattern="yyyy-MM-dd HH:mm" required="true" showOn="button"
                                            timeOnly="false">
                                </p:calendar>
                                

                            </div>
                        </div>
                        <div class="w-full sm:w-half formbold-px-3">
                            <div class="formbold-mb-5">
                                <label for="endDateTime" class="formbold-form-label">End Time </label>
                                <!--
                                <input
                                    type="time"
                                    name="endTime"
                                    id="endTime"
                                    class="formbold-form-input"
                                    required="required"
                                    />
                                -->
                                <!--
                                <input
                                    type="datetime-local" 
                                    name="endDateTime"
                                    id="endDateTime"
                                    class="formbold-form-input"
                                    required="required"
                                    value="{exchangeListingManagedBean.formattedEndDateTime}"
                                    onchange="{exchangeListingManagedBean.setEndDateTime(this.value)}"/>
                                -->
                                <!--
                                <input
                                    type="datetime-local" 
                                    name="endDateTime"
                                    id="endDateTime"
                                    class="formbold-form-input"
                                    required="required"
                                    value="{exchangeListingManagedBean.formattedEndDateTime}"
                                    />
                                -->
                                <!--
                                <p:calendar id="endTime" value="{exchangeListingManagedBean.currentExchangeListing.endDateTime}"
                                            pattern="HH:mm" timeOnly="true" required="true"
                                            />
                                -->
                               
                                <p:calendar id="endDateTime" value="#{exchangeListingManagedBean.currentExchangeListing.endDateTime}" 
                                            pattern="yyyy-MM-dd HH:mm" required="true" showOn="button"
                                            timeOnly="false"/>
                               
                            </div>
                        </div>
                    </div>


                    <!--                    
                   <div class="flex formbold-mb-5">
                     <div class="flex">
                       <input
                         type="radio"
                         name="radio1"
                         id="radioButton1"
                         class="formbold-radio"
                       />
                       <label for="radioButton1" class="formbold-radio-label"> One-time </label>
                     </div>
                     <div class="flex">
                       <input
                         type="radio"
                         name="radio1"
                         id="radioButton2"
                         class="formbold-radio"
                       />
                       <label for="radioButton2" class="formbold-radio-label"> Recurrent </label>
                     </div>
                   </div>
                    -->

                    <div class="formbold-mb-5">
                        <label for="message" class="formbold-form-label"> Description </label>
                        <!--
                        <textarea
                            rows="6"
                            name="message"
                            id="message"
                            placeholder="Type your message"
                            class="formbold-form-input"
                            required="required"
                            ></textarea>
                        -->
                        <h:inputTextarea id="message" value="#{exchangeListingManagedBean.currentExchangeListing.description}" rows="6" class="formbold-form-input" required="true"/>

                    </div>

                    <div>
                        <h:commandButton onclick="return validateDateTime()" 
                                         value="#{exchangeListingManagedBean.currentExchangeListing.id != null ? 'Update Listing' : 'Add Listing'}" 
                                         action="#{exchangeListingManagedBean.submit}" 
                                         styleClass="formbold-btn"
                                         />
                    </div>

                </h:form>
            </div>
        </div>

        <script>
            //<![CDATA[
            // Set the minimum date for the date input to today
            document.getElementById('date').min = new Date().toISOString().split('T')[0];

            // Function to update the minimum start time based on the selected date
            // NOTE: Not using now, this is for the split date and 2 time
            function updateMinTime() {
                const today = new Date();
                const selectedDate = new Date(document.getElementById('date').value);
                const startTimeInput = document.getElementById('startTime');

                if (selectedDate.toISOString().split('T')[0] === today.toISOString().split('T')[0]) {
                    startTimeInput.min = today.toISOString().split('T')[1].substring(0, 5);
                } else {
                    startTimeInput.min = '00:00'; // Reset min time for other dates
                }
            }

            // update the minimum start time based on the selected date
// changes the date to the actual date but time is not checked
            // update the minimum start time based on the selected date
            function setMinEndDateTime() {
                var startDateTimeInput = document.getElementById('startDateTime');
                var endDateTimeInput = document.getElementById('endDateTime');

                // Parse the start date and time as local
                var startDate = new Date(startDateTimeInput.value);

                // Check if startDate is "Invalid Date"
                if (isNaN(startDate.getTime())) {
                    console.error('Invalid start date:', startDateTimeInput.value);
                    return;  // Exit the function if start date is invalid
                }

                // Set the end date-time to match the start date, just incrementing time to enforce business logic
                var endDate = new Date(startDate.getTime() + (60 * 1000)); // Increment 1 minute to ensure it's after start time

                // Initially set the endDateTime to the adjusted time
                endDateTimeInput.value = endDate.toISOString().slice(0, 16); // Ensure format is correct for datetime-local input

                // Listener to adjust endDateTime to ensure only time part changes and date remains the same as startDateTime
                endDateTimeInput.addEventListener('change', function () {
                    var selectedTime = new Date(this.value);

                    // Check if selectedTime is "Invalid Date"
                    if (isNaN(selectedTime.getTime())) {
                        console.error('Invalid end date:', this.value);
                        return;  // Exit the function if end date is invalid
                    }

                    // Ensure the date part remains the same as startDateTime
                    selectedTime.setFullYear(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());

                    // Update the input field to reflect this correction
                    this.value = selectedTime.toISOString().slice(0, 16);
                });
            }


            // Function to check if time is after current and set end date to be after 
            function validateDateTime() {
                const selectedDateValue = document.getElementById('date').value;
                const selectedStartTimeValue = document.getElementById('startTime').value;
                const selectedDate = new Date(selectedDateValue + 'T' + selectedStartTimeValue);
                const now = new Date();

                if (selectedDate <= now) {
                    alert('The selected date and time must be in the future.');
                    return false; // Prevent form submission
                }

                return true; // Allow form submission

            }
            //]]>
        </script>
    </ui:define>

</ui:composition>
